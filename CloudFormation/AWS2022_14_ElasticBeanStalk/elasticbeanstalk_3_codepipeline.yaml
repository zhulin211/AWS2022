AWSTemplateFormatVersion: "2010-09-09"
Description: Test CodeDeploy and CodePipeline

Parameters:
  EBStackName:
    Type: String
    Description: Name of Elastic BeanStalk
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    Default: QYTEB

Resources:
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: AWS2022_EB_Flask
      ComputePlatform: Server  # Allowed values: ECS | Lambda | Server

  CodeDeployRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: QYTAWSFlaskCodeDeployRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codedeploy.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

  CodePipelineRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: QYTAWSCodePipelineRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "codepipeline.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Path: "/service-role/"
        ManagedPolicyArns:
          - !Ref CodePipelinePolicy

  AmazonCloudWatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource:
                  !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref AppPipeline ] ]

  CodePipelinePolicy:  # CodePipeline权限策略, 先又GUI配置, 然后把系统产生的策略抄出来
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: AWS2022CodePipelinePolicy
      PolicyDocument:
        Id: AWS2022CodePipelinePolicyDoc
        Version: 2012-10-17
        Statement:
          - Sid: Statement1
            Effect: Allow
            Action:
              - iam:PassRole
            Resource: "*"
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - cloudformation.amazonaws.com
                  - elasticbeanstalk.amazonaws.com
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
          - Sid: Statement2
            Effect: Allow
            Action:
              - codecommit:CancelUploadArchive
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetRepository
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
            Resource: "*"
          - Sid: Statement3
            Effect: Allow
            Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplication
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
            Resource: "*"
          - Sid: Statement4
            Effect: Allow
            Action:
              - codestar-connections:UseConnection
            Resource: "*"
          - Sid: Statement5
            Effect: Allow
            Action:
              - elasticbeanstalk:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
            Resource: "*"
          - Sid: Statement6
            Effect: Allow
            Action:
              - lambda:InvokeFunction
              - lambda:ListFunctions
            Resource: "*"
          - Sid: Statement7
            Effect: Allow
            Action:
              - opsworks:CreateDeployment
              - opsworks:DescribeApps
              - opsworks:DescribeCommands
              - opsworks:DescribeDeployments
              - opsworks:DescribeInstances
              - opsworks:DescribeStacks
              - opsworks:UpdateApp
              - opsworks:UpdateStack
            Resource: "*"
          - Sid: Statement8
            Effect: Allow
            Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
            Resource: "*"
          - Sid: Statement9
            Effect: Allow
            Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:BatchGetBuildBatches
              - codebuild:StartBuildBatch
            Resource: "*"
          - Sid: Statement10
            Effect: Allow
            Action:
              - devicefarm:ListProjects
              - devicefarm:ListDevicePools
              - devicefarm:GetRun
              - devicefarm:GetUpload
              - devicefarm:CreateUpload
              - devicefarm:ScheduleRun
            Resource: "*"
          - Sid: Statement11
            Effect: Allow
            Action:
              - servicecatalog:ListProvisioningArtifacts
              - servicecatalog:CreateProvisioningArtifact
              - servicecatalog:DescribeProvisioningArtifact
              - servicecatalog:DeleteProvisioningArtifact
              - servicecatalog:UpdateProduct
            Resource: "*"
          - Sid: Statement12
            Effect: Allow
            Action:
              - cloudformation:ValidateTemplate
            Resource: "*"
          - Sid: Statement13
            Effect: Allow
            Action:
              - ecr:DescribeImages
            Resource: "*"
          - Sid: Statement14
            Effect: Allow
            Action:
              - states:DescribeExecution
              - states:DescribeStateMachine
              - states:StartExecution
            Resource: "*"
          - Sid: Statement15
            Effect: Allow
            Action:
              - appconfig:StartDeployment
              - appconfig:StopDeployment
              - appconfig:GetDeployment
            Resource: "*"

#  DeploymentGroup:
#    Type: AWS::CodeDeploy::DeploymentGroup
#    Properties:
#      DeploymentGroupName: QYTAWSFlaskDeployGroup
#      ApplicationName: !Ref CodeDeployApplication
#      DeploymentStyle:
#        DeploymentOption: WITHOUT_TRAFFIC_CONTROL  # WITH_TRAFFIC_CONTROL | WITHOUT_TRAFFIC_CONTROL (不激活load balance)
#        DeploymentType: IN_PLACE  # 对存在的instances进行! 停止,升级和重启! # 可选项 BLUE_GREEN | IN_PLACE
#      DeploymentConfigName: CodeDeployDefault.AllAtOnce  # CodeDeployDefault.OneAtATime | CodeDeployDefault.HalfAtATime
#      ServiceRoleArn:
#        Fn::GetAtt: ["CodeDeployRole", "Arn"]
#
#      Ec2TagFilters:  # 通过这个过滤器找到EC2实例
#        - Key: Name
#          Value: Web Service
#          Type: "KEY_AND_VALUE"

  AmazonCloudWatchEventRule:  # CloudWatch监测CodeCommit仓库, 触发CodePipeline
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit  # 源码位于CodeCommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - arn:aws:codecommit:us-east-1:609047981853:AWS2022_EB_Flask  # 项目需要在一个Region
        detail:
          event:  # 仓库的事件
            - referenceCreated
            - referenceUpdated
          referenceType:  # 监测仓库的分支
            - branch
          referenceName:  # 监测仓库的master分支事件
            - master
      Targets:
        - Arn:
            !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref AppPipeline ] ]  # 触发的CodePipeline
          RoleArn: !GetAtt AmazonCloudWatchEventRole.Arn
          Id: codepipeline-AppPipeline

  CodePipelineArtifactStoreBucket:  # 保存Pipeline遗产的S3存储桶
    Type: AWS::S3::Bucket
    Properties:
      BucketName: aws2022-s3-pipeline
      Tags:
        - Key: Department
          Value: AWS2022 Pipeline
    DeletionPolicy: Retain

  # S3桶策略
  CodePipelineArtifactStoreBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CodePipelineArtifactStoreBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Join
              - ''
              - - !GetAtt
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Join
              - ''
              - - !GetAtt
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              Bool:
                'aws:SecureTransport': false

  AppPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt : ["CodePipelineRole", "Arn"]
      ArtifactStore:
        Type: S3  # 保存Pipeline遗产的S3存储桶
        Location: aws2022-s3-pipeline
      Stages: # https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers
        - Name: Source  # 第一阶段源码
          Actions:
            - Name: SourceAction
              Configuration:
                RepositoryName: AWS2022_EB_Flask  # 源码仓库名称   # 项目需要在一个Region
                BranchName: master  # 源码的分支
                PollForSourceChanges: false
              ActionTypeId:
                Category: Source  # 代码源
                Owner: AWS
                Version: 1
                Provider: CodeCommit  # 源码来自于CodeCommit
              OutputArtifacts:
                - Name: SourceOutput  # 输出遗产名称(---需要对应---)
              RunOrder: 1
        - Name: Deploy  # 第二阶段部署
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy  # 部署
                Owner: AWS
                Version: 1
                Provider: "ElasticBeanstalk"  # 使用Elastic Beanstalk部署 # https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements
              Region: us-east-1
              InputArtifacts:
                - Name: SourceOutput  # 输入遗产名称(---需要对应---)
              Configuration: # https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements
                ApplicationName:
                  Fn::ImportValue: !Sub ${EBStackName}-APPName
                EnvironmentName:
                  Fn::ImportValue: !Sub ${EBStackName}-EnvName
              RunOrder: 2


