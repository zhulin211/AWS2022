AWSTemplateFormatVersion: 2010-09-09
Description: Create ECS Cluster

Parameters:
  VPCStack:
    Type: String
    Description: Name of VPC stack to build ECS
    Default: ECSVPCNETS

Resources:
  TargetGroup:  # 负载均衡器的目标组
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      # 基本信息, 名字,端口和协议
      Name: QytangTargetGroup
      Port: 80
      Protocol: HTTP
      # 健康检查
      HealthCheckEnabled: true
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      # ECS的IP自动注册到Target Group
      TargetType: ip
      # Target Group所在的VPC
      VpcId:
        Fn::ImportValue: !Sub ${VPCStack}-VPCID
      Tags:
        - Key: Name
          Value: ECS_TG

  LoadBalancer:  # 负载均衡器
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: QytangECSALB  # 名字
      Scheme: internet-facing  # 面向互联网的负载均衡器 (internal | internet-facing)
      Subnets:  # 负载均衡器所在子网
        - Fn::ImportValue: !Sub ${VPCStack}-ECSNet1-ID
        - Fn::ImportValue: !Sub ${VPCStack}-ECSNet2-ID
      SecurityGroups:
        - Fn::ImportValue: !Sub ${VPCStack}-ECSSecurityGroup-ID  # 负载均衡过滤用的Security Group
      Tags:
        - Key: Name
          Value: ECS_ALB

  Listener:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:  # 默认行为
        - Order: 1
          TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer  # 关联负载均衡器
      Port: 80
      Protocol: HTTP
    DependsOn:
      - TargetGroup

  ECSCluster:  # ECS集群
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: QytangFargateCluster  # 集群的名字

  ECSRole:  # ECS执行的权限
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Sid: ""
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
                - ecs.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  FargateServiceTaskDefinition:  # 类似于K8S的Pod
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        -
          Name: QytangLB
          Essential: true
          Image: 609047981853.dkr.ecr.us-east-1.amazonaws.com/qytang_nginx:latest
          PortMappings:
            -
              ContainerPort: 80
              HostPort: 80
              Protocol: tcp
      Cpu: '256'
      ExecutionRoleArn: !Ref ECSRole
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        -  FARGATE

  FargateService:  # Service是多种调度方案之一, 类似于K8S的Deployment
    # 调度方案介绍
    # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html
    Type: AWS::ECS::Service
    DependsOn: Listener
    Properties:
      ServiceName: QytangService
      Cluster: !Ref ECSCluster
      DeploymentController:
        Type: ECS
      DesiredCount: 1  # 这个就是副本数量, 先保持1个, 便于后续测试扩容
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: QytangLB  # 这个名字一定要和在FargateServiceTaskDefinition --- ContainerDefinitions 定义的名字一致
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup  # 放入负载均衡的Target Group
      NetworkConfiguration:
          AwsvpcConfiguration:
            SecurityGroups:  # 访问控制用的Security Group
              -
                Fn::ImportValue: !Sub ${VPCStack}-ECSSecurityGroup-ID
            Subnets:  # 容器会动态分散到下面的子网
              -
                Fn::ImportValue: !Sub ${VPCStack}-ECSNet1-ID
              -
                Fn::ImportValue: !Sub ${VPCStack}-ECSNet2-ID
            AssignPublicIp: ENABLED # 如果没有公网IP地址,就没法下载镜像,任务会被卡住
      TaskDefinition: !Ref FargateServiceTaskDefinition

Outputs: # 输出内容，并且可以被其他Stack引用
    ServiceId:
        Description: Fargate Service ID
        Value: !Ref FargateService
        Export:
            Name: !Sub ${AWS::StackName}-ServiceID
